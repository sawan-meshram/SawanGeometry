/**
 * @author Sawan Meshram
 */
package com.sawan.test;

import java.util.List;

import org.locationtech.jts.geom.Geometry;

import com.sawan.geometry.algorithm.DiamondationAlgorithm;
import com.sawan.geometry.algorithm.DiamondationAlgorithm.GeometryType;
import com.sawan.geometry.util.GeometryUtil;

public class DiamondationAlgoTest {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		String WKT = "POLYGON((-108.31146240234374 37.80978395301098,-108.47625732421874 38.01347623104195,-108.11920166015624 38.04376510743967,-107.14965820312499 38.04376510743967,-107.77038574218749 37.90086509257007,-107.78686523437497 37.76854362092148,-107.47650146484374 37.80544394934272,-107.42156982421876 37.49665234123337,-108.160400390625 37.4726783096708,-108.3746337890625 37.66425503616459,-108.48999023437499 37.746828939401354,-108.31146240234374 37.80978395301098))";

		Geometry geom = GeometryUtil.toGeometry(WKT);
		List<Geometry> splitGeometries = DiamondationAlgorithm.splitOriginalGeometry(geom, 2, GeometryType.MultiPolygon);
		
		System.out.println(GeometryUtil.buildGeometryCollection(splitGeometries));
		splitGeometries.forEach(System.out::println);
		//Output-> splitGeometries
		//GEOMETRYCOLLECTION (MULTIPOLYGON (((-108.45768261880545 37.75822170855523, -107.81982421874999 37.75822170855523, -107.81982421874999 37.483729536116, -108.160400390625 37.4726783096708, -108.3746337890625 37.66425503616459, -108.48999023437499 37.746828939401354, -108.45768261880545 37.75822170855523))), MULTIPOLYGON (((-108.11920166015624 38.04376510743967, -107.81982421874999 38.04376510743967, -107.81982421874999 37.75822170855523, -108.45768261880545 37.75822170855523, -108.31146240234374 37.80978395301098, -108.47625732421874 38.01347623104195, -108.11920166015624 38.04376510743967))), MULTIPOLYGON (((-107.81982421874999 37.483729536116, -107.81982421874999 37.75822170855523, -107.46810099315888 37.75822170855523, -107.42156982421876 37.49665234123337, -107.81982421874999 37.483729536116))), MULTIPOLYGON (((-107.81982421874999 37.75822170855523, -107.81982421874999 38.04376510743967, -107.14965820312499 38.04376510743967, -107.77038574218749 37.90086509257007, -107.78686523437497 37.76854362092148, -107.47650146484374 37.80544394934272, -107.46810099315888 37.75822170855523, -107.81982421874999 37.75822170855523))))

		
		
		List<Geometry> splitGeometries_1 = DiamondationAlgorithm.splitOriginalGeometry(geom, 2, GeometryType.ALL);
		System.out.println(GeometryUtil.buildGeometryCollection(splitGeometries_1));

		//Output-> splitGeometries_1
		//GEOMETRYCOLLECTION (POLYGON ((-108.45768261880545 37.75822170855523, -107.81982421874999 37.75822170855523, -107.81982421874999 37.483729536116, -108.160400390625 37.4726783096708, -108.3746337890625 37.66425503616459, -108.48999023437499 37.746828939401354, -108.45768261880545 37.75822170855523)), POLYGON ((-108.11920166015624 38.04376510743967, -107.81982421874999 38.04376510743967, -107.81982421874999 37.75822170855523, -108.45768261880545 37.75822170855523, -108.31146240234374 37.80978395301098, -108.47625732421874 38.01347623104195, -108.11920166015624 38.04376510743967)), POLYGON ((-107.81982421874999 37.483729536116, -107.81982421874999 37.75822170855523, -107.46810099315888 37.75822170855523, -107.42156982421876 37.49665234123337, -107.81982421874999 37.483729536116)), POLYGON ((-107.81982421874999 37.75822170855523, -107.81982421874999 38.04376510743967, -107.14965820312499 38.04376510743967, -107.77038574218749 37.90086509257007, -107.78686523437497 37.76854362092148, -107.47650146484374 37.80544394934272, -107.46810099315888 37.75822170855523, -107.81982421874999 37.75822170855523)))

	}

}
